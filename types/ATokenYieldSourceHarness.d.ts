/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface ATokenYieldSourceHarnessInterface extends ethers.utils.Interface {
  functions: {
    "aToken()": FunctionFragment;
    "assetManager()": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "balances(address)": FunctionFragment;
    "c_0x5196d961(bytes32)": FunctionFragment;
    "c_0xa46a446e(bytes32)": FunctionFragment;
    "c_0xd6b259d6(bytes32)": FunctionFragment;
    "initialize(address,address,address,address)": FunctionFragment;
    "lendingPool()": FunctionFragment;
    "lendingPoolAddressesProviderRegistry()": FunctionFragment;
    "lendingPoolProvider()": FunctionFragment;
    "owner()": FunctionFragment;
    "redeem(uint256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "reserve()": FunctionFragment;
    "setAssetManager(address)": FunctionFragment;
    "setReserve(address)": FunctionFragment;
    "sponsor(uint256)": FunctionFragment;
    "supplyTo(uint256,address)": FunctionFragment;
    "token()": FunctionFragment;
    "tokenAddress()": FunctionFragment;
    "transferERC20(address,address,uint256)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "transferReserve(address)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "aToken", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "assetManager",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(functionFragment: "balances", values: [string]): string;
  encodeFunctionData(
    functionFragment: "c_0x5196d961",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "c_0xa46a446e",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "c_0xd6b259d6",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "lendingPool",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "lendingPoolAddressesProviderRegistry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "lendingPoolProvider",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "redeem",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "reserve", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setAssetManager",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setReserve", values: [string]): string;
  encodeFunctionData(
    functionFragment: "sponsor",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "supplyTo",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "token", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferERC20",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferReserve",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "aToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "assetManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balances", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "c_0x5196d961",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "c_0xa46a446e",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "c_0xd6b259d6",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "lendingPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lendingPoolAddressesProviderRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lendingPoolProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "redeem", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "reserve", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setAssetManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setReserve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sponsor", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "supplyTo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "token", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferERC20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferReserve",
    data: BytesLike
  ): Result;

  events: {
    "ATokenYieldSourceInitialized(address,address,address,address)": EventFragment;
    "AssetManagerTransferred(address,address)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "ATokenYieldSourceInitialized"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetManagerTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class ATokenYieldSourceHarness extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ATokenYieldSourceHarnessInterface;

  functions: {
    aToken(overrides?: CallOverrides): Promise<[string]>;

    "aToken()"(overrides?: CallOverrides): Promise<[string]>;

    assetManager(overrides?: CallOverrides): Promise<[string]>;

    "assetManager()"(overrides?: CallOverrides): Promise<[string]>;

    balanceOf(
      addr: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "balanceOf(address)"(
      addr: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balances(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    "balances(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    c_0x5196d961(
      c__0x5196d961: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "c_0x5196d961(bytes32)"(
      c__0x5196d961: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    c_0xa46a446e(
      c__0xa46a446e: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "c_0xa46a446e(bytes32)"(
      c__0xa46a446e: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    c_0xd6b259d6(
      c__0xd6b259d6: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "c_0xd6b259d6(bytes32)"(
      c__0xd6b259d6: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    initialize(
      _aToken: string,
      _lendingPoolAddressesProviderRegistry: string,
      _reserve: string,
      _owner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,address,address,address)"(
      _aToken: string,
      _lendingPoolAddressesProviderRegistry: string,
      _reserve: string,
      _owner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    lendingPool(overrides?: CallOverrides): Promise<[string]>;

    "lendingPool()"(overrides?: CallOverrides): Promise<[string]>;

    lendingPoolAddressesProviderRegistry(
      overrides?: CallOverrides
    ): Promise<[string]>;

    "lendingPoolAddressesProviderRegistry()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    lendingPoolProvider(overrides?: CallOverrides): Promise<[string]>;

    "lendingPoolProvider()"(overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    redeem(
      redeemAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "redeem(uint256)"(
      redeemAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    reserve(overrides?: CallOverrides): Promise<[string]>;

    "reserve()"(overrides?: CallOverrides): Promise<[string]>;

    setAssetManager(
      newAssetManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAssetManager(address)"(
      newAssetManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    sponsor(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "sponsor(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    supplyTo(
      mintAmount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "supplyTo(uint256,address)"(
      mintAmount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    token(overrides?: CallOverrides): Promise<[string]>;

    "token()"(overrides?: CallOverrides): Promise<[string]>;

    tokenAddress(overrides?: CallOverrides): Promise<[string]>;

    "tokenAddress()"(overrides?: CallOverrides): Promise<[string]>;

    transferERC20(
      erc20Token: string,
      to: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferERC20(address,address,uint256)"(
      erc20Token: string,
      to: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferReserve(
      to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferReserve(address)"(
      to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  aToken(overrides?: CallOverrides): Promise<string>;

  "aToken()"(overrides?: CallOverrides): Promise<string>;

  assetManager(overrides?: CallOverrides): Promise<string>;

  "assetManager()"(overrides?: CallOverrides): Promise<string>;

  balanceOf(addr: string, overrides?: Overrides): Promise<ContractTransaction>;

  "balanceOf(address)"(
    addr: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  balances(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  "balances(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  c_0x5196d961(
    c__0x5196d961: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  "c_0x5196d961(bytes32)"(
    c__0x5196d961: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  c_0xa46a446e(
    c__0xa46a446e: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  "c_0xa46a446e(bytes32)"(
    c__0xa46a446e: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  c_0xd6b259d6(
    c__0xd6b259d6: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  "c_0xd6b259d6(bytes32)"(
    c__0xd6b259d6: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  initialize(
    _aToken: string,
    _lendingPoolAddressesProviderRegistry: string,
    _reserve: string,
    _owner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,address,address,address)"(
    _aToken: string,
    _lendingPoolAddressesProviderRegistry: string,
    _reserve: string,
    _owner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  lendingPool(overrides?: CallOverrides): Promise<string>;

  "lendingPool()"(overrides?: CallOverrides): Promise<string>;

  lendingPoolAddressesProviderRegistry(
    overrides?: CallOverrides
  ): Promise<string>;

  "lendingPoolAddressesProviderRegistry()"(
    overrides?: CallOverrides
  ): Promise<string>;

  lendingPoolProvider(overrides?: CallOverrides): Promise<string>;

  "lendingPoolProvider()"(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  redeem(
    redeemAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "redeem(uint256)"(
    redeemAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  reserve(overrides?: CallOverrides): Promise<string>;

  "reserve()"(overrides?: CallOverrides): Promise<string>;

  setAssetManager(
    newAssetManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAssetManager(address)"(
    newAssetManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  sponsor(
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "sponsor(uint256)"(
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  supplyTo(
    mintAmount: BigNumberish,
    to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "supplyTo(uint256,address)"(
    mintAmount: BigNumberish,
    to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  token(overrides?: CallOverrides): Promise<string>;

  "token()"(overrides?: CallOverrides): Promise<string>;

  tokenAddress(overrides?: CallOverrides): Promise<string>;

  "tokenAddress()"(overrides?: CallOverrides): Promise<string>;

  transferERC20(
    erc20Token: string,
    to: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferERC20(address,address,uint256)"(
    erc20Token: string,
    to: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferReserve(
    to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferReserve(address)"(
    to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    aToken(overrides?: CallOverrides): Promise<string>;

    "aToken()"(overrides?: CallOverrides): Promise<string>;

    assetManager(overrides?: CallOverrides): Promise<string>;

    "assetManager()"(overrides?: CallOverrides): Promise<string>;

    balanceOf(addr: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      addr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balances(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balances(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_0x5196d961(
      c__0x5196d961: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "c_0x5196d961(bytes32)"(
      c__0x5196d961: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    c_0xa46a446e(
      c__0xa46a446e: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "c_0xa46a446e(bytes32)"(
      c__0xa46a446e: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    c_0xd6b259d6(
      c__0xd6b259d6: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "c_0xd6b259d6(bytes32)"(
      c__0xd6b259d6: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    initialize(
      _aToken: string,
      _lendingPoolAddressesProviderRegistry: string,
      _reserve: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,address,address,address)"(
      _aToken: string,
      _lendingPoolAddressesProviderRegistry: string,
      _reserve: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    lendingPool(overrides?: CallOverrides): Promise<string>;

    "lendingPool()"(overrides?: CallOverrides): Promise<string>;

    lendingPoolAddressesProviderRegistry(
      overrides?: CallOverrides
    ): Promise<string>;

    "lendingPoolAddressesProviderRegistry()"(
      overrides?: CallOverrides
    ): Promise<string>;

    lendingPoolProvider(overrides?: CallOverrides): Promise<string>;

    "lendingPoolProvider()"(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    redeem(
      redeemAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "redeem(uint256)"(
      redeemAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    reserve(overrides?: CallOverrides): Promise<string>;

    "reserve()"(overrides?: CallOverrides): Promise<string>;

    setAssetManager(
      newAssetManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAssetManager(address)"(
      newAssetManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    "setReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    sponsor(amount: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "sponsor(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    supplyTo(
      mintAmount: BigNumberish,
      to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "supplyTo(uint256,address)"(
      mintAmount: BigNumberish,
      to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    token(overrides?: CallOverrides): Promise<string>;

    "token()"(overrides?: CallOverrides): Promise<string>;

    tokenAddress(overrides?: CallOverrides): Promise<string>;

    "tokenAddress()"(overrides?: CallOverrides): Promise<string>;

    transferERC20(
      erc20Token: string,
      to: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferERC20(address,address,uint256)"(
      erc20Token: string,
      to: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferReserve(to: string, overrides?: CallOverrides): Promise<void>;

    "transferReserve(address)"(
      to: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    ATokenYieldSourceInitialized(
      aToken: string | null,
      lendingPoolAddressesProviderRegistry: null,
      reserve: string | null,
      owner: string | null
    ): TypedEventFilter<
      [string, string, string, string],
      {
        aToken: string;
        lendingPoolAddressesProviderRegistry: string;
        reserve: string;
        owner: string;
      }
    >;

    AssetManagerTransferred(
      previousAssetManager: string | null,
      newAssetManager: string | null
    ): TypedEventFilter<
      [string, string],
      { previousAssetManager: string; newAssetManager: string }
    >;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;
  };

  estimateGas: {
    aToken(overrides?: CallOverrides): Promise<BigNumber>;

    "aToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    assetManager(overrides?: CallOverrides): Promise<BigNumber>;

    "assetManager()"(overrides?: CallOverrides): Promise<BigNumber>;

    balanceOf(addr: string, overrides?: Overrides): Promise<BigNumber>;

    "balanceOf(address)"(
      addr: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    balances(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balances(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_0x5196d961(
      c__0x5196d961: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "c_0x5196d961(bytes32)"(
      c__0x5196d961: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_0xa46a446e(
      c__0xa46a446e: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "c_0xa46a446e(bytes32)"(
      c__0xa46a446e: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_0xd6b259d6(
      c__0xd6b259d6: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "c_0xd6b259d6(bytes32)"(
      c__0xd6b259d6: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _aToken: string,
      _lendingPoolAddressesProviderRegistry: string,
      _reserve: string,
      _owner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,address,address,address)"(
      _aToken: string,
      _lendingPoolAddressesProviderRegistry: string,
      _reserve: string,
      _owner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    lendingPool(overrides?: CallOverrides): Promise<BigNumber>;

    "lendingPool()"(overrides?: CallOverrides): Promise<BigNumber>;

    lendingPoolAddressesProviderRegistry(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "lendingPoolAddressesProviderRegistry()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lendingPoolProvider(overrides?: CallOverrides): Promise<BigNumber>;

    "lendingPoolProvider()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    redeem(
      redeemAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "redeem(uint256)"(
      redeemAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    reserve(overrides?: CallOverrides): Promise<BigNumber>;

    "reserve()"(overrides?: CallOverrides): Promise<BigNumber>;

    setAssetManager(
      newAssetManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAssetManager(address)"(
      newAssetManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserve(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    "setReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    sponsor(amount: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "sponsor(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    supplyTo(
      mintAmount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "supplyTo(uint256,address)"(
      mintAmount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    token(overrides?: CallOverrides): Promise<BigNumber>;

    "token()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "tokenAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferERC20(
      erc20Token: string,
      to: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferERC20(address,address,uint256)"(
      erc20Token: string,
      to: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferReserve(to: string, overrides?: Overrides): Promise<BigNumber>;

    "transferReserve(address)"(
      to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    aToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "aToken()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    assetManager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "assetManager()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    balanceOf(
      addr: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address)"(
      addr: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balances(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balances(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_0x5196d961(
      c__0x5196d961: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "c_0x5196d961(bytes32)"(
      c__0x5196d961: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_0xa46a446e(
      c__0xa46a446e: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "c_0xa46a446e(bytes32)"(
      c__0xa46a446e: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_0xd6b259d6(
      c__0xd6b259d6: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "c_0xd6b259d6(bytes32)"(
      c__0xd6b259d6: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _aToken: string,
      _lendingPoolAddressesProviderRegistry: string,
      _reserve: string,
      _owner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,address,address,address)"(
      _aToken: string,
      _lendingPoolAddressesProviderRegistry: string,
      _reserve: string,
      _owner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    lendingPool(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "lendingPool()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    lendingPoolAddressesProviderRegistry(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "lendingPoolAddressesProviderRegistry()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lendingPoolProvider(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "lendingPoolProvider()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    redeem(
      redeemAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "redeem(uint256)"(
      redeemAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    reserve(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "reserve()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setAssetManager(
      newAssetManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAssetManager(address)"(
      newAssetManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    sponsor(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "sponsor(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    supplyTo(
      mintAmount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "supplyTo(uint256,address)"(
      mintAmount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    token(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "token()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "tokenAddress()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferERC20(
      erc20Token: string,
      to: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferERC20(address,address,uint256)"(
      erc20Token: string,
      to: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferReserve(
      to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferReserve(address)"(
      to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
