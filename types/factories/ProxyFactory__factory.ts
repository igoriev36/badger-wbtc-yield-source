/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ProxyFactory } from "../ProxyFactory";

export class ProxyFactory__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ProxyFactory> {
    return super.deploy(overrides || {}) as Promise<ProxyFactory>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProxyFactory {
    return super.attach(address) as ProxyFactory;
  }
  connect(signer: Signer): ProxyFactory__factory {
    return super.connect(signer) as ProxyFactory__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyFactory {
    return new Contract(address, _abi, signerOrProvider) as ProxyFactory;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x2b4df744",
        type: "bytes32",
      },
    ],
    name: "c_0x2b4df744",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "deployMinimal",
    outputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610662806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630e36e82e1461003b578063b3eeb5e214610069575b600080fd5b6100676004803603602081101561005157600080fd5b810190808035906020019092919050505061016e565b005b6101426004803603604081101561007f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156100bc57600080fd5b8201836020820111156100ce57600080fd5b803590602001918460018302840111640100000000831117156100f057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610171565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b50565b600061019f7f496e63bca770071036b62a6e7d949ed5f47af8c151e647647aa6eb8dba5e5ab360001b61016e565b6101cb7f0b2cb9782e115e3545bf20b50fb6a94c39f500bee21491a3e8318b1ee0c976d060001b61016e565b6101f77f8d397d2fd9b8f893c9d9c7a5311dfb5ad40df748edcac541afb0d9d84e86f46460001b61016e565b60008360601b905061022b7f45279967b9baf118d2b468ec5030aa995a2eb09224ac49bbfdd6c1ea91fa37d760001b61016e565b6040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09250506102b27f24acb2db9dae7cabe34ded4a673483ffbf6e3696a031c460e20e4efe6e0134e660001b61016e565b6102de7f14b8beb26891735a8e18228fceea90c2db78f94a620d6bbfbd03c0b0c81ccef960001b61016e565b7efffc2da0b561cae30d9826d37709e9421c4725faebc226cbbb7ef5fc5e734982604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16103567fd9376274a749529e56387ad8f2c5f836992e860eb04e87a753970e3ea473df7060001b61016e565b6103827f924c0c8a1531034cc303bfd185d3a7a34c0c55150901f478f53c435ce5c8057660001b61016e565b6000835111156105d4576103b87f8095f89fa95d49b62fc023de9ffc0f9d203e0e80410cd1c694651371f7d38e6860001b61016e565b6103e47f6697604418f1fce268ed958769fe9366f695de7f781141b58d9d15f1671a60b960001b61016e565b6104107fd4e4d2c4cd4a7610dcc2bf5a94e99ad810fd77a07b033f1c88aa74c4437324a660001b61016e565b60008273ffffffffffffffffffffffffffffffffffffffff16846040518082805190602001908083835b6020831061045d578051825260208201915060208101905060208303925061043a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146104bf576040519150601f19603f3d011682016040523d82523d6000602084013e6104c4565b606091505b505090506104f47fdb153de2629bab7efbdae98ea61c8d8d505c337bfefd626a84229c4a7bd428ae60001b61016e565b6105207f94c7db057282fc91f2c851d531737560486c38c082692b797f88faf68a1da8f460001b61016e565b61054c7fcf87262a910313bdb2e78fad3185ec09466bf3b56752c414140368913cc42b0460001b61016e565b806105a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806106096024913960400191505060405180910390fd5b6105ce7f1d6849dc0c08c73c771b6903f5011137dbaa7b4516298948a24bb3b3b23c87df60001b61016e565b50610601565b6106007f5ec478f2e429a8b3bd89c2b325f54741b85c403add2f7955e07061aceaee6bf060001b61016e565b5b509291505056fe50726f7879466163746f72792f636f6e7374727563746f722d63616c6c2d6661696c6564a264697066735822122073a153c2cbe15a82be751bd09dda0563e143811c51010d333219f8881fc9a8b464736f6c634300060c0033";
