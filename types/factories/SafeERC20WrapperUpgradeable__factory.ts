/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SafeERC20WrapperUpgradeable } from "../SafeERC20WrapperUpgradeable";

export class SafeERC20WrapperUpgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SafeERC20WrapperUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<SafeERC20WrapperUpgradeable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeERC20WrapperUpgradeable {
    return super.attach(address) as SafeERC20WrapperUpgradeable;
  }
  connect(signer: Signer): SafeERC20WrapperUpgradeable__factory {
    return super.connect(signer) as SafeERC20WrapperUpgradeable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeERC20WrapperUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SafeERC20WrapperUpgradeable;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowance_",
        type: "uint256",
      },
    ],
    name: "setAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bad806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633ba93f261161005b5780633ba93f261461013f57806370a082311461015c578063a9059cbb14610194578063dd62ed3e146101c057610088565b8063095ea7b31461008d57806310bad4cf146100cd57806311e330b2146100ec57806323b872dd14610109575b600080fd5b6100b9600480360360408110156100a357600080fd5b506001600160a01b0381351690602001356101ee565b604080519115158252519081900360200190f35b6100ea600480360360208110156100e357600080fd5b503561020e565b005b6100ea6004803603602081101561010257600080fd5b5035610229565b6100b96004803603606081101561011f57600080fd5b506001600160a01b03813581169160208101359091169060400135610241565b6100ea6004803603602081101561015557600080fd5b5035610263565b6101826004803603602081101561017257600080fd5b50356001600160a01b03166102cb565b60408051918252519081900360200190f35b6100b9600480360360408110156101aa57600080fd5b506001600160a01b03813516906020013561034e565b610182600480360360408110156101d657600080fd5b506001600160a01b0381358116916020013516610368565b603354600090610208906001600160a01b031684846103f4565b92915050565b603354610226906001600160a01b031660008361050c565b50565b603354610226906001600160a01b0316600083610609565b60335460009061025c906001600160a01b031685858561069f565b9392505050565b60335460408051631dd49f9360e11b81526004810184905290516001600160a01b0390921691633ba93f269160248082019260009290919082900301818387803b1580156102b057600080fd5b505af11580156102c4573d6000803e3d6000fd5b5050505050565b603354604080516370a0823160e01b81526001600160a01b038481166004830152915160009392909216916370a0823191602480820192602092909190829003018186803b15801561031c57600080fd5b505afa158015610330573d6000803e3d6000fd5b505050506040513d602081101561034657600080fd5b509092915050565b603354600090610208906001600160a01b031684846106f9565b60335460408051636eb1769f60e11b81526001600160a01b03858116600483015284811660248301529151600093929092169163dd62ed3e91604480820192602092909190829003018186803b1580156103c157600080fd5b505afa1580156103d5573d6000803e3d6000fd5b505050506040513d60208110156103eb57600080fd5b50519392505050565b80158061047a575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561044c57600080fd5b505afa158015610460573d6000803e3d6000fd5b505050506040513d602081101561047657600080fd5b5051155b6104b55760405162461bcd60e51b8152600401808060200182810382526036815260200180610b426036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610507908490610747565b505050565b60006105ae82604051806060016040528060298152602001610ac96029913960408051636eb1769f60e11b81523060048201526001600160a01b03888116602483015291519189169163dd62ed3e91604480820192602092909190829003018186803b15801561057b57600080fd5b505afa15801561058f573d6000803e3d6000fd5b505050506040513d60208110156105a557600080fd5b505191906107f8565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052909150610603908590610747565b50505050565b60006105ae82856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561066d57600080fd5b505afa158015610681573d6000803e3d6000fd5b505050506040513d602081101561069757600080fd5b50519061088f565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610603908590610747565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105079084905b606061079c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108e99092919063ffffffff16565b805190915015610507578080602001905160208110156107bb57600080fd5b50516105075760405162461bcd60e51b815260040180806020018281038252602a815260200180610b18602a913960400191505060405180910390fd5b600081848411156108875760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561084c578181015183820152602001610834565b50505050905090810190601f1680156108795780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008282018381101561025c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60606108f88484600085610900565b949350505050565b6060824710156109415760405162461bcd60e51b8152600401808060200182810382526026815260200180610af26026913960400191505060405180910390fd5b61094a85610a5c565b61099b576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106109da5780518252601f1990920191602091820191016109bb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610a3c576040519150601f19603f3d011682016040523d82523d6000602084013e610a41565b606091505b5091509150610a51828286610a62565b979650505050505050565b3b151590565b60608315610a7157508161025c565b825115610a815782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561084c57818101518382015260200161083456fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a26469706673582212201383d8498e1468932c5e7c8bc697f26f83263663f7527e4123cbbdcaaae2a4f364736f6c634300060c0033";
